on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  pull_request:

name: Test and publish

permissions:
  contents: write
  deployments: write
  issues: write
  packages: write

env:
  CC_BINARY_URL: https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@v3
      - name: Setup Code Climate test-reporter
        run: |
          curl -L "$CC_BINARY_URL" > ./cc-test-reporter
          chmod +x ./cc-test-reporter
      - name: Run tests
        run: |
          export GIT_COMMIT_SHA='${{ github.sha }}'
          export GIT_BRANCH="$(echo '${{ github.ref }}' | sed -E -e 's/.*\/(.*)/\1/')"
          export CC_TEST_REPORTER_ID='${{ secrets.CC_TEST_REPORTER_ID }}'

          ./cc-test-reporter before-build

          echo "Running tests..."
          go test -coverprofile c.out ./...

          mod="$(cat go.mod | awk '/^module/ {print $2}')"

          if [[ ! -z "$CC_TEST_REPORTER_ID" ]]; then
            echo "Generating coverage report..."
            ./cc-test-reporter after-build -p "${mod}/" -t gocov
          fi

  publish:
    name: Goreleaser
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        if: "!startsWith(github.ref, 'refs/tags/v')"
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Write release-env file
        uses: DamianReeves/write-file-action@v1.0
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          path: ${{ github.workspace }}/.release-env
          contents: |
            DOCKER_FAIL_ON_LOGIN_ERROR=true
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}

      - name: goreleaser release preview
        run: make release-preview
        if: "!startsWith(github.ref, 'refs/tags/v')"

      - name: Tag Docker images appropriately
        run: >
          docker tag ghcr.io/ecadlabs/signatory:${{ github.sha }}-amd64 ghcr.io/ecadlabs/signatory:${{ github.head_ref || github.ref_name }}-amd64;
          docker tag ghcr.io/ecadlabs/signatory:${{ github.sha }}-arm64 ghcr.io/ecadlabs/signatory:${{ github.head_ref || github.ref_name }}-arm64;
          docker tag ghcr.io/ecadlabs/signatory:${{ github.sha }}-armv7 ghcr.io/ecadlabs/signatory:${{ github.head_ref || github.ref_name }}-armv7;
        if: "!startsWith(github.ref, 'refs/tags/v')"

      - name: Push Signatory preview images to GH Container Registry
        run: >
         docker push ghcr.io/ecadlabs/signatory:${{ github.head_ref || github.ref_name }}-amd64;
         docker push ghcr.io/ecadlabs/signatory:${{ github.head_ref || github.ref_name }}-arm64;
         docker push ghcr.io/ecadlabs/signatory:${{ github.head_ref || github.ref_name }}-armv7;
        if: "!startsWith(github.ref, 'refs/tags/v')"

      - name: goreleaser release
        run: make release
        if: startsWith(github.ref, 'refs/tags/v')
