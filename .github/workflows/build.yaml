on:
  workflow_dispatch:
  push:
  pull_request:
    types:
      - opened

name: Test and publish

env:
  CC_BINARY_URL: https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - uses: actions/checkout@v2
      - name: Setup Code Climate test-reporter
        run: |
          curl -L "$CC_BINARY_URL" > ./cc-test-reporter
          chmod +x ./cc-test-reporter
      - name: Run tests
        run: |
          export GIT_COMMIT_SHA='${{ github.sha }}'
          export GIT_BRANCH="$(echo '${{ github.ref }}' | sed -E -e 's/.*\/(.*)/\1/')"
          export CC_TEST_REPORTER_ID='${{ secrets.CC_TEST_REPORTER_ID }}'

          ./cc-test-reporter before-build

          echo "Running tests..."
          go test -coverprofile c.out ./...

          mod="$(cat go.mod | awk '/^module/ {print $2}')"

          if [[ ! -z "$CC_TEST_REPORTER_ID" ]]; then
            echo "Generating coverage report..."
            ./cc-test-reporter after-build -p "${mod}/" -t gocov
          fi

  publish:
    name: Publish
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: setup release environment
        run: |-
          echo 'GITHUB_TOKEN=${{secrets.GH_PAT}}' > .release-env

      - name: Docker Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}

      - name: Run GoReleaser
        run: make release

