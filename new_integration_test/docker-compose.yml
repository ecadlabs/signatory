networks:
  ecadnet: {}

configs:
  accounts:
    file: ./accounts.json
  sigy-config:
    file: ./signatory.yaml
  sigy-secret:
    file: ./signatory-local-secret.json
  gcp-token:
    file: ./gcp-token.json
  az-sp-key:
    file: ./service-principal.key

services:

  tezos-node:
    container_name: tezos-node
    hostname: tezos-node
    image: tezos/tezos:$OCTEZ_VERSION
    ports:
      - 18731:18731
      - 19731:19731
    entrypoint: /bin/sh
    volumes:
      - ./tezos_scripts/octez-sandboxed-node.sh:/home/tezos/octez-sandboxed-node.sh
    command: -c "sudo apk add --no-cache bash curl jq && /home/tezos/octez-sandboxed-node.sh 1 --connection 0"
    environment:
      - PROTOCOL=$PROTOCOL    
    healthcheck:
      test: "curl -s http://localhost:18731/health/ready | jq -e .ready || exit 1"
      interval: 1s
      timeout: 1s
      retries: 10
      start_period: 1s
    depends_on:
      signatory:
        condition: service_healthy
    networks:
      - ecadnet

  tezos-client:
    container_name: tezos-client
    hostname: tezos-client
    image: tezos/tezos:$OCTEZ_VERSION
    entrypoint: /bin/sh
    volumes:
      - ./tezos_scripts:/home/tezos/tezos_scripts
      # - ./.tezos-client:/home/tezos/.tezos-client
      # - ./contract.event.tz:/home/tezos/contract.event.tz
    environment:
      - PROTOCOL=$PROTOCOL
    command: -c "sudo apk add --no-cache bash && bash /home/tezos/tezos_scripts/setup-client.sh $PROTOCOL"
    depends_on:
      signatory:
        condition: service_healthy
      tezos-node:
        condition: service_healthy
    networks:
      - ecadnet

  signatory:
    container_name: signatory
    hostname: signatory
    image: $IMAGE
    ports:
      - "6732:6732"
      - "9583:9583"
    volumes:
      - ./.watermarks:/var/lib/signatory
      - ./coverage:/opt/coverage
      - ./hashicerts:/opt/hashicerts
    configs:
      - source: sigy-config
        target: /etc/signatory.yaml
      - source: sigy-secret
        target: /etc/secret.json
      - source: gcp-token
        target: /etc/gcp-token.json
      - source: az-sp-key
        target: /etc/service-principal.key
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/etc/gcp-token.json
      - GOCOVERDIR=/opt/coverage
    command: serve --log debug
    networks:
      - ecadnet
    healthcheck:
      test: "curl --fail http://localhost:9583/healthz || exit 1"
      interval: 1s
      timeout: 1s
      retries: 10
      start_period: 1s
    depends_on:
      speculos:
        condition: service_healthy      

  hashi:
    container_name: hashi
    image: hashicorp/vault:1.14
    ports:
      - "8200:8200"
    networks:
      - ecadnet
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_TOKEN=root
      - VAULT_ADDR=https://127.0.0.1:8200
      - VAULT_CACERT=/opt/signatory/certs/vault-ca.pem
    command: server -dev-tls -dev-tls-cert-dir=/opt/signatory/certs
    volumes:
      - ./hashicerts:/opt/signatory/certs
    cap_add:
      - IPC_LOCK

  speculos:
    container_name: speculos
    image: stephengaudet/tezoswalletemu:$ARCH
    ports:
      - "9999:9999"
      - "41000:41000"
      - "5001:5001"
    networks:
      - ecadnet
    command: --display headless --vnc-port 41000 --api-port 5001 -m nanos apps/app_s.elf
    healthcheck:
      test: ["CMD","stat","/etc/passwd"]
      interval: 1s
      timeout: 1s
      retries: 10
      start_period: 10s