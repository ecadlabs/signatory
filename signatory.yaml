server:
  # Address for the main HTTP server to listen on
  address: :6732
  # Address for the utility HTTP server to listen on
  utility_address: :9583
  jwt:
    # Secret used to sign JWT tokens
    users:
      user_name1:
        password: password1
        secret: secret1
        jwt_exp: 35
      user_name2:
        password: password2
        secret: secret2
        jwt_exp: 30


vaults:
  # Name is used to identify backend during import process
  kms:
    driver: cloudkms
    config:
      # See backend specific documentation
      project: signatory
      location: europe-north1
      key_ring: hsm-ring
  azure:
    driver: azure
    config:
      # See backend specific documentation
      vault: https://signatory.vault.azure.net/
      tenant_id: cf5dd0ba-d3a3-4f3f-a688-06d12672f8ed
      client_id: 5d29a974-edd0-4659-b933-7d9c56726649
      client_pkcs12_certificate: principal.pfx
  yubi:
    driver: yubihsm
    config:
      # See backend specific documentation
      address: localhost:12345
      password: password
      auth_key_id: 1
  hashicorp:
    driver: hashicorpvault
    config:
      address: "http://127.0.0.1:8200"
      roleID: "5970e31e-132b-d624-f3eb-10d1fcdd3fab"
      secretID: "aa9c4a24-c7f1-a278-a9db-bac58273fe7c"
      transitConfig:
        mountPoint: "transit/"

# List enabled public keys hashes here
tezos:
  # This example does not specifiy a policy, and be default will allow signing of "block" and "endorsement" operations only.
  tz1Wz4ZabKRsz842Xuzy4a7CcWADfPVsPKus:

  # This example specifies which operations and kinds Signatory will sign, and logs payloads.
  tz3MhmeqpudUqEX8PYTbNDF3CVcnnjNQoo8N:
    # Setting `log_payloads` to `true` will cause Signatory to log operation
    # payloads to `stdout`. This may be desirable for audit and investigative
    # purposes.
    log_payloads: true
    allow:
      # List of [block, endorsement, failing_noop, generic, preendorsement]
      generic:
        # List of [activate_account, ballot, delegation, double_baking_evidence, double_endorsement_evidence,
        # double_preendorsement_evidence, endorsement, failing_noop, origination, preendorsement, proposals,
        # register_global_constant, reveal, sc_rollup_add_messages, sc_rollup_cement, sc_rollup_originate,
        # sc_rollup_publish, seed_nonce_revelation, set_deposits_limit, transaction, transfer_ticket,
        # tx_rollup_commit, tx_rollup_dispatch_tickets, tx_rollup_finalize_commitment, tx_rollup_origination,
        # tx_rollup_rejection, tx_rollup_remove_commitment, tx_rollup_return_bond, tx_rollup_submit_batch]
        - transaction
        - endorsement
      block:
      endorsement:
