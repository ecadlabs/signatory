version: 2

jobs:
  test:
    docker:
      - image: circleci/golang:latest
    working_directory: /go/src/github.com/ecadlabs/signatory
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh && dep ensure
      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Unit tests
          command: |
            ./cc-test-reporter before-build
            for pkg in $(go list ./... | grep -v vendor); do
              go test -coverprofile=$(echo $pkg | tr / -).cover $pkg
            done
            echo "mode: set" > c.out
            grep -h -v "^mode:" ./*.cover >> c.out
            rm -f *.cover
            ./cc-test-reporter after-build
  publish:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -t ecadlabs/signatory:$CIRCLE_TAG .
      - run:
          name: Login to Docker Hub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Publish image to Docker Hub
          command: docker push ecadlabs/signatory:$CIRCLE_TAG
      - run:
          name: Add latest tag to docker image
          command: docker tag ecadlabs/signatory:$CIRCLE_TAG ecadlabs/signatory:latest && docker push ecadlabs/signatory:latest
workflows:
  version: 2
  test:
    jobs:
      - test
  publish:
    jobs:
      - test:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
